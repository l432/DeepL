// SCAPS script
action qe.checkaction 0
action iv.checkaction 1
action cv.checkaction 0
action cf.checkaction 0
action dark

get measurement.iv zu // this sets also zname and uname
// show scriptvariables 

set scriptvariable.xname Nt(CIGS) (1/cm3)
set scriptvariable.yname Chi_sq

// three initial guesses for the parameter Nt(CIGS)
set scriptvariable.maxiteration 3
set scriptvariable.nx maxiteration
set scriptvariable.ny maxiteration
get layer1.defect1.ntotal vvalue
set scriptvariable.xvector[1] vvalue
set scriptvariable.xvalue 2.0
set scriptvariable.yvalue xindex
math scalarreciproque yy
math scalarpower xxy // xvalue <- (3)^(1/xindex)
math scalarmultiply yvx
set scriptvariable.xvector[2] yvalue
math scalardivide yvx
set scriptvariable.xvector[0] yvalue


loop start 
set layer1.defect1.ntotal xvector[loopcounter] // set the CIGS acceptor density from the 3 first elements of xvector
calculate singleshot // calculate IVdark(dark)
get iv vw // place IVdark in vectors v and w
math chi_square_log yzuvw // calculate the Chi-square deviation (of the log of the values!) between the measured and calculated IVdark
set scriptvariable.yvector[loopcounter] yvalue // and place it in yvector at it's place
loop stop 

set scriptvariable.mode 6         // means find a minimum (here a IVdark curve fit), the variable (here Nt) is of "logarithmic nature"
loop maxiteration 8                 // do not exagerate
loop maxerror     1e-3          // do not exagerate;
set scriptvariable.looperror 1E30

loop start                             // start the iteration to find the root
set scriptvariable.nv loopcounter
// use the dll dellivered with SCAPS

rundll scapsuserfunction               

// it looks only to xvector and yvector [0], [1] and [2] to find a better guess to make y = maximal
// the function returns xvalue as a better guess for the variable; it is placed in yvalua
// set this to d
// then place this better guess on xvector[0] (and push the rest upward)               

set layer1.defect1.ntotal xvalue  // use the proposed new value as Nt(CIGS)
set scriptvariable.xvector xvalue      

calculate singleshot 

// places the new Chi_sq in yvector[0] and pushes the rest up
get iv vw // place IVdark in vectors v and w
math chi_square_log yzuvw // calculate the Chi-square deviation between the measured and calculated IVdark
set scriptvariable.yvector yvalue
set scriptvariable.looperror yvalue

// you can comment the show command below out when it runs to your satisfaction       
// show scriptvariables                   

loop stop
set scriptvariable.vindex loopcounter
math increment vindex
//show scriptvariables


